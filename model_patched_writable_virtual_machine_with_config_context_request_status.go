/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// PatchedWritableVirtualMachineWithConfigContextRequestStatus * `offline` - Offline * `active` - Active * `planned` - Planned * `staged` - Staged * `failed` - Failed * `decommissioning` - Decommissioning * `paused` - Paused
type PatchedWritableVirtualMachineWithConfigContextRequestStatus string

// List of PatchedWritableVirtualMachineWithConfigContextRequest_status
const (
	PATCHEDWRITABLEVIRTUALMACHINEWITHCONFIGCONTEXTREQUESTSTATUS_OFFLINE         PatchedWritableVirtualMachineWithConfigContextRequestStatus = "offline"
	PATCHEDWRITABLEVIRTUALMACHINEWITHCONFIGCONTEXTREQUESTSTATUS_ACTIVE          PatchedWritableVirtualMachineWithConfigContextRequestStatus = "active"
	PATCHEDWRITABLEVIRTUALMACHINEWITHCONFIGCONTEXTREQUESTSTATUS_PLANNED         PatchedWritableVirtualMachineWithConfigContextRequestStatus = "planned"
	PATCHEDWRITABLEVIRTUALMACHINEWITHCONFIGCONTEXTREQUESTSTATUS_STAGED          PatchedWritableVirtualMachineWithConfigContextRequestStatus = "staged"
	PATCHEDWRITABLEVIRTUALMACHINEWITHCONFIGCONTEXTREQUESTSTATUS_FAILED          PatchedWritableVirtualMachineWithConfigContextRequestStatus = "failed"
	PATCHEDWRITABLEVIRTUALMACHINEWITHCONFIGCONTEXTREQUESTSTATUS_DECOMMISSIONING PatchedWritableVirtualMachineWithConfigContextRequestStatus = "decommissioning"
	PATCHEDWRITABLEVIRTUALMACHINEWITHCONFIGCONTEXTREQUESTSTATUS_PAUSED          PatchedWritableVirtualMachineWithConfigContextRequestStatus = "paused"
)

// All allowed values of PatchedWritableVirtualMachineWithConfigContextRequestStatus enum
var AllowedPatchedWritableVirtualMachineWithConfigContextRequestStatusEnumValues = []PatchedWritableVirtualMachineWithConfigContextRequestStatus{
	"offline",
	"active",
	"planned",
	"staged",
	"failed",
	"decommissioning",
	"paused",
}

func (v *PatchedWritableVirtualMachineWithConfigContextRequestStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchedWritableVirtualMachineWithConfigContextRequestStatus(value)
	for _, existing := range AllowedPatchedWritableVirtualMachineWithConfigContextRequestStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchedWritableVirtualMachineWithConfigContextRequestStatus", value)
}

// NewPatchedWritableVirtualMachineWithConfigContextRequestStatusFromValue returns a pointer to a valid PatchedWritableVirtualMachineWithConfigContextRequestStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchedWritableVirtualMachineWithConfigContextRequestStatusFromValue(v string) (*PatchedWritableVirtualMachineWithConfigContextRequestStatus, error) {
	ev := PatchedWritableVirtualMachineWithConfigContextRequestStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchedWritableVirtualMachineWithConfigContextRequestStatus: valid values are %v", v, AllowedPatchedWritableVirtualMachineWithConfigContextRequestStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchedWritableVirtualMachineWithConfigContextRequestStatus) IsValid() bool {
	for _, existing := range AllowedPatchedWritableVirtualMachineWithConfigContextRequestStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PatchedWritableVirtualMachineWithConfigContextRequest_status value
func (v PatchedWritableVirtualMachineWithConfigContextRequestStatus) Ptr() *PatchedWritableVirtualMachineWithConfigContextRequestStatus {
	return &v
}

type NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus struct {
	value *PatchedWritableVirtualMachineWithConfigContextRequestStatus
	isSet bool
}

func (v NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus) Get() *PatchedWritableVirtualMachineWithConfigContextRequestStatus {
	return v.value
}

func (v *NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus) Set(val *PatchedWritableVirtualMachineWithConfigContextRequestStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableVirtualMachineWithConfigContextRequestStatus(val *PatchedWritableVirtualMachineWithConfigContextRequestStatus) *NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus {
	return &NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus{value: val, isSet: true}
}

func (v NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableVirtualMachineWithConfigContextRequestStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
