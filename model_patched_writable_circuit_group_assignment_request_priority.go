/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// PatchedWritableCircuitGroupAssignmentRequestPriority * `primary` - Primary * `secondary` - Secondary * `tertiary` - Tertiary * `inactive` - Inactive
type PatchedWritableCircuitGroupAssignmentRequestPriority string

// List of PatchedWritableCircuitGroupAssignmentRequest_priority
const (
	PATCHEDWRITABLECIRCUITGROUPASSIGNMENTREQUESTPRIORITY_PRIMARY   PatchedWritableCircuitGroupAssignmentRequestPriority = "primary"
	PATCHEDWRITABLECIRCUITGROUPASSIGNMENTREQUESTPRIORITY_SECONDARY PatchedWritableCircuitGroupAssignmentRequestPriority = "secondary"
	PATCHEDWRITABLECIRCUITGROUPASSIGNMENTREQUESTPRIORITY_TERTIARY  PatchedWritableCircuitGroupAssignmentRequestPriority = "tertiary"
	PATCHEDWRITABLECIRCUITGROUPASSIGNMENTREQUESTPRIORITY_INACTIVE  PatchedWritableCircuitGroupAssignmentRequestPriority = "inactive"
	PATCHEDWRITABLECIRCUITGROUPASSIGNMENTREQUESTPRIORITY_EMPTY     PatchedWritableCircuitGroupAssignmentRequestPriority = ""
)

// All allowed values of PatchedWritableCircuitGroupAssignmentRequestPriority enum
var AllowedPatchedWritableCircuitGroupAssignmentRequestPriorityEnumValues = []PatchedWritableCircuitGroupAssignmentRequestPriority{
	"primary",
	"secondary",
	"tertiary",
	"inactive",
	"",
}

func (v *PatchedWritableCircuitGroupAssignmentRequestPriority) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchedWritableCircuitGroupAssignmentRequestPriority(value)
	for _, existing := range AllowedPatchedWritableCircuitGroupAssignmentRequestPriorityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchedWritableCircuitGroupAssignmentRequestPriority", value)
}

// NewPatchedWritableCircuitGroupAssignmentRequestPriorityFromValue returns a pointer to a valid PatchedWritableCircuitGroupAssignmentRequestPriority
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchedWritableCircuitGroupAssignmentRequestPriorityFromValue(v string) (*PatchedWritableCircuitGroupAssignmentRequestPriority, error) {
	ev := PatchedWritableCircuitGroupAssignmentRequestPriority(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchedWritableCircuitGroupAssignmentRequestPriority: valid values are %v", v, AllowedPatchedWritableCircuitGroupAssignmentRequestPriorityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchedWritableCircuitGroupAssignmentRequestPriority) IsValid() bool {
	for _, existing := range AllowedPatchedWritableCircuitGroupAssignmentRequestPriorityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PatchedWritableCircuitGroupAssignmentRequest_priority value
func (v PatchedWritableCircuitGroupAssignmentRequestPriority) Ptr() *PatchedWritableCircuitGroupAssignmentRequestPriority {
	return &v
}

type NullablePatchedWritableCircuitGroupAssignmentRequestPriority struct {
	value *PatchedWritableCircuitGroupAssignmentRequestPriority
	isSet bool
}

func (v NullablePatchedWritableCircuitGroupAssignmentRequestPriority) Get() *PatchedWritableCircuitGroupAssignmentRequestPriority {
	return v.value
}

func (v *NullablePatchedWritableCircuitGroupAssignmentRequestPriority) Set(val *PatchedWritableCircuitGroupAssignmentRequestPriority) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableCircuitGroupAssignmentRequestPriority) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableCircuitGroupAssignmentRequestPriority) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableCircuitGroupAssignmentRequestPriority(val *PatchedWritableCircuitGroupAssignmentRequestPriority) *NullablePatchedWritableCircuitGroupAssignmentRequestPriority {
	return &NullablePatchedWritableCircuitGroupAssignmentRequestPriority{value: val, isSet: true}
}

func (v NullablePatchedWritableCircuitGroupAssignmentRequestPriority) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableCircuitGroupAssignmentRequestPriority) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
