/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"

	"gopkg.in/validator.v2"
)

// CustomFieldRequestChoiceSet - struct for CustomFieldRequestChoiceSet
type CustomFieldRequestChoiceSet struct {
	BriefCustomFieldChoiceSetRequest *BriefCustomFieldChoiceSetRequest
	Int32                            *int32
}

// BriefCustomFieldChoiceSetRequestAsCustomFieldRequestChoiceSet is a convenience function that returns BriefCustomFieldChoiceSetRequest wrapped in CustomFieldRequestChoiceSet
func BriefCustomFieldChoiceSetRequestAsCustomFieldRequestChoiceSet(v *BriefCustomFieldChoiceSetRequest) CustomFieldRequestChoiceSet {
	return CustomFieldRequestChoiceSet{
		BriefCustomFieldChoiceSetRequest: v,
	}
}

// int32AsCustomFieldRequestChoiceSet is a convenience function that returns int32 wrapped in CustomFieldRequestChoiceSet
func Int32AsCustomFieldRequestChoiceSet(v *int32) CustomFieldRequestChoiceSet {
	return CustomFieldRequestChoiceSet{
		Int32: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CustomFieldRequestChoiceSet) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	match := 0
	// try to unmarshal data into BriefCustomFieldChoiceSetRequest
	err = newStrictDecoder(data).Decode(&dst.BriefCustomFieldChoiceSetRequest)
	if err == nil {
		jsonBriefCustomFieldChoiceSetRequest, _ := json.Marshal(dst.BriefCustomFieldChoiceSetRequest)
		if string(jsonBriefCustomFieldChoiceSetRequest) == "{}" { // empty struct
			dst.BriefCustomFieldChoiceSetRequest = nil
		} else {
			if err = validator.Validate(dst.BriefCustomFieldChoiceSetRequest); err != nil {
				dst.BriefCustomFieldChoiceSetRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.BriefCustomFieldChoiceSetRequest = nil
	}

	// try to unmarshal data into Int32
	err = newStrictDecoder(data).Decode(&dst.Int32)
	if err == nil {
		jsonInt32, _ := json.Marshal(dst.Int32)
		if string(jsonInt32) == "{}" { // empty struct
			dst.Int32 = nil
		} else {
			if err = validator.Validate(dst.Int32); err != nil {
				dst.Int32 = nil
			} else {
				match++
			}
		}
	} else {
		dst.Int32 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.BriefCustomFieldChoiceSetRequest = nil
		dst.Int32 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CustomFieldRequestChoiceSet)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CustomFieldRequestChoiceSet)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CustomFieldRequestChoiceSet) MarshalJSON() ([]byte, error) {
	if src.BriefCustomFieldChoiceSetRequest != nil {
		return json.Marshal(&src.BriefCustomFieldChoiceSetRequest)
	}

	if src.Int32 != nil {
		return json.Marshal(&src.Int32)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CustomFieldRequestChoiceSet) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.BriefCustomFieldChoiceSetRequest != nil {
		return obj.BriefCustomFieldChoiceSetRequest
	}

	if obj.Int32 != nil {
		return obj.Int32
	}

	// all schemas are nil
	return nil
}

type NullableCustomFieldRequestChoiceSet struct {
	value *CustomFieldRequestChoiceSet
	isSet bool
}

func (v NullableCustomFieldRequestChoiceSet) Get() *CustomFieldRequestChoiceSet {
	return v.value
}

func (v *NullableCustomFieldRequestChoiceSet) Set(val *CustomFieldRequestChoiceSet) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldRequestChoiceSet) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldRequestChoiceSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldRequestChoiceSet(val *CustomFieldRequestChoiceSet) *NullableCustomFieldRequestChoiceSet {
	return &NullableCustomFieldRequestChoiceSet{value: val, isSet: true}
}

func (v NullableCustomFieldRequestChoiceSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldRequestChoiceSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
