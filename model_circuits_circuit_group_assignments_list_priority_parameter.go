/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// CircuitsCircuitGroupAssignmentsListPriorityParameter the model 'CircuitsCircuitGroupAssignmentsListPriorityParameter'
type CircuitsCircuitGroupAssignmentsListPriorityParameter string

// List of circuits_circuit_group_assignments_list_priority_parameter
const (
	CIRCUITSCIRCUITGROUPASSIGNMENTSLISTPRIORITYPARAMETER_INACTIVE  CircuitsCircuitGroupAssignmentsListPriorityParameter = "inactive"
	CIRCUITSCIRCUITGROUPASSIGNMENTSLISTPRIORITYPARAMETER_PRIMARY   CircuitsCircuitGroupAssignmentsListPriorityParameter = "primary"
	CIRCUITSCIRCUITGROUPASSIGNMENTSLISTPRIORITYPARAMETER_SECONDARY CircuitsCircuitGroupAssignmentsListPriorityParameter = "secondary"
	CIRCUITSCIRCUITGROUPASSIGNMENTSLISTPRIORITYPARAMETER_TERTIARY  CircuitsCircuitGroupAssignmentsListPriorityParameter = "tertiary"
)

// All allowed values of CircuitsCircuitGroupAssignmentsListPriorityParameter enum
var AllowedCircuitsCircuitGroupAssignmentsListPriorityParameterEnumValues = []CircuitsCircuitGroupAssignmentsListPriorityParameter{
	"inactive",
	"primary",
	"secondary",
	"tertiary",
}

func (v *CircuitsCircuitGroupAssignmentsListPriorityParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CircuitsCircuitGroupAssignmentsListPriorityParameter(value)
	for _, existing := range AllowedCircuitsCircuitGroupAssignmentsListPriorityParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CircuitsCircuitGroupAssignmentsListPriorityParameter", value)
}

// NewCircuitsCircuitGroupAssignmentsListPriorityParameterFromValue returns a pointer to a valid CircuitsCircuitGroupAssignmentsListPriorityParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCircuitsCircuitGroupAssignmentsListPriorityParameterFromValue(v string) (*CircuitsCircuitGroupAssignmentsListPriorityParameter, error) {
	ev := CircuitsCircuitGroupAssignmentsListPriorityParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CircuitsCircuitGroupAssignmentsListPriorityParameter: valid values are %v", v, AllowedCircuitsCircuitGroupAssignmentsListPriorityParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CircuitsCircuitGroupAssignmentsListPriorityParameter) IsValid() bool {
	for _, existing := range AllowedCircuitsCircuitGroupAssignmentsListPriorityParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to circuits_circuit_group_assignments_list_priority_parameter value
func (v CircuitsCircuitGroupAssignmentsListPriorityParameter) Ptr() *CircuitsCircuitGroupAssignmentsListPriorityParameter {
	return &v
}

type NullableCircuitsCircuitGroupAssignmentsListPriorityParameter struct {
	value *CircuitsCircuitGroupAssignmentsListPriorityParameter
	isSet bool
}

func (v NullableCircuitsCircuitGroupAssignmentsListPriorityParameter) Get() *CircuitsCircuitGroupAssignmentsListPriorityParameter {
	return v.value
}

func (v *NullableCircuitsCircuitGroupAssignmentsListPriorityParameter) Set(val *CircuitsCircuitGroupAssignmentsListPriorityParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableCircuitsCircuitGroupAssignmentsListPriorityParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableCircuitsCircuitGroupAssignmentsListPriorityParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCircuitsCircuitGroupAssignmentsListPriorityParameter(val *CircuitsCircuitGroupAssignmentsListPriorityParameter) *NullableCircuitsCircuitGroupAssignmentsListPriorityParameter {
	return &NullableCircuitsCircuitGroupAssignmentsListPriorityParameter{value: val, isSet: true}
}

func (v NullableCircuitsCircuitGroupAssignmentsListPriorityParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCircuitsCircuitGroupAssignmentsListPriorityParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
