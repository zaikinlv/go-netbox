/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// checks if the PatchedWritableCircuitGroupAssignmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedWritableCircuitGroupAssignmentRequest{}

// PatchedWritableCircuitGroupAssignmentRequest Base serializer for group assignments under CircuitSerializer.
type PatchedWritableCircuitGroupAssignmentRequest struct {
	Group                *BriefCircuitGroupAssignmentSerializerRequestGroup           `json:"group,omitempty"`
	MemberType           *string                                                      `json:"member_type,omitempty"`
	MemberId             *int64                                                       `json:"member_id,omitempty"`
	Priority             NullablePatchedWritableCircuitGroupAssignmentRequestPriority `json:"priority,omitempty"`
	Tags                 []NestedTagRequest                                           `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedWritableCircuitGroupAssignmentRequest PatchedWritableCircuitGroupAssignmentRequest

// NewPatchedWritableCircuitGroupAssignmentRequest instantiates a new PatchedWritableCircuitGroupAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableCircuitGroupAssignmentRequest() *PatchedWritableCircuitGroupAssignmentRequest {
	this := PatchedWritableCircuitGroupAssignmentRequest{}
	return &this
}

// NewPatchedWritableCircuitGroupAssignmentRequestWithDefaults instantiates a new PatchedWritableCircuitGroupAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableCircuitGroupAssignmentRequestWithDefaults() *PatchedWritableCircuitGroupAssignmentRequest {
	this := PatchedWritableCircuitGroupAssignmentRequest{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetGroup() BriefCircuitGroupAssignmentSerializerRequestGroup {
	if o == nil || IsNil(o.Group) {
		var ret BriefCircuitGroupAssignmentSerializerRequestGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetGroupOk() (*BriefCircuitGroupAssignmentSerializerRequestGroup, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given BriefCircuitGroupAssignmentSerializerRequestGroup and assigns it to the Group field.
func (o *PatchedWritableCircuitGroupAssignmentRequest) SetGroup(v BriefCircuitGroupAssignmentSerializerRequestGroup) {
	o.Group = &v
}

// GetMemberType returns the MemberType field value if set, zero value otherwise.
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetMemberType() string {
	if o == nil || IsNil(o.MemberType) {
		var ret string
		return ret
	}
	return *o.MemberType
}

// GetMemberTypeOk returns a tuple with the MemberType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetMemberTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MemberType) {
		return nil, false
	}
	return o.MemberType, true
}

// HasMemberType returns a boolean if a field has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) HasMemberType() bool {
	if o != nil && !IsNil(o.MemberType) {
		return true
	}

	return false
}

// SetMemberType gets a reference to the given string and assigns it to the MemberType field.
func (o *PatchedWritableCircuitGroupAssignmentRequest) SetMemberType(v string) {
	o.MemberType = &v
}

// GetMemberId returns the MemberId field value if set, zero value otherwise.
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetMemberId() int64 {
	if o == nil || IsNil(o.MemberId) {
		var ret int64
		return ret
	}
	return *o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetMemberIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MemberId) {
		return nil, false
	}
	return o.MemberId, true
}

// HasMemberId returns a boolean if a field has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) HasMemberId() bool {
	if o != nil && !IsNil(o.MemberId) {
		return true
	}

	return false
}

// SetMemberId gets a reference to the given int64 and assigns it to the MemberId field.
func (o *PatchedWritableCircuitGroupAssignmentRequest) SetMemberId(v int64) {
	o.MemberId = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetPriority() PatchedWritableCircuitGroupAssignmentRequestPriority {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret PatchedWritableCircuitGroupAssignmentRequestPriority
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetPriorityOk() (*PatchedWritableCircuitGroupAssignmentRequestPriority, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullablePatchedWritableCircuitGroupAssignmentRequestPriority and assigns it to the Priority field.
func (o *PatchedWritableCircuitGroupAssignmentRequest) SetPriority(v PatchedWritableCircuitGroupAssignmentRequestPriority) {
	o.Priority.Set(&v)
}

// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *PatchedWritableCircuitGroupAssignmentRequest) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *PatchedWritableCircuitGroupAssignmentRequest) UnsetPriority() {
	o.Priority.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedWritableCircuitGroupAssignmentRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *PatchedWritableCircuitGroupAssignmentRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

func (o PatchedWritableCircuitGroupAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedWritableCircuitGroupAssignmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.MemberType) {
		toSerialize["member_type"] = o.MemberType
	}
	if !IsNil(o.MemberId) {
		toSerialize["member_id"] = o.MemberId
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedWritableCircuitGroupAssignmentRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedWritableCircuitGroupAssignmentRequest := _PatchedWritableCircuitGroupAssignmentRequest{}

	err = json.Unmarshal(data, &varPatchedWritableCircuitGroupAssignmentRequest)

	if err != nil {
		return err
	}

	*o = PatchedWritableCircuitGroupAssignmentRequest(varPatchedWritableCircuitGroupAssignmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "group")
		delete(additionalProperties, "member_type")
		delete(additionalProperties, "member_id")
		delete(additionalProperties, "priority")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedWritableCircuitGroupAssignmentRequest struct {
	value *PatchedWritableCircuitGroupAssignmentRequest
	isSet bool
}

func (v NullablePatchedWritableCircuitGroupAssignmentRequest) Get() *PatchedWritableCircuitGroupAssignmentRequest {
	return v.value
}

func (v *NullablePatchedWritableCircuitGroupAssignmentRequest) Set(val *PatchedWritableCircuitGroupAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableCircuitGroupAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableCircuitGroupAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableCircuitGroupAssignmentRequest(val *PatchedWritableCircuitGroupAssignmentRequest) *NullablePatchedWritableCircuitGroupAssignmentRequest {
	return &NullablePatchedWritableCircuitGroupAssignmentRequest{value: val, isSet: true}
}

func (v NullablePatchedWritableCircuitGroupAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableCircuitGroupAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
