/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the WritableVirtualCircuitTerminationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WritableVirtualCircuitTerminationRequest{}

// WritableVirtualCircuitTerminationRequest Adds support for custom fields and tags.
type WritableVirtualCircuitTerminationRequest struct {
	VirtualCircuit       PatchedWritableVirtualCircuitTerminationRequestVirtualCircuit `json:"virtual_circuit"`
	Role                 *PatchedWritableTunnelTerminationRequestRole                  `json:"role,omitempty"`
	Interface            PatchedWritableVirtualCircuitTerminationRequestInterface      `json:"interface"`
	Description          *string                                                       `json:"description,omitempty"`
	Tags                 []NestedTagRequest                                            `json:"tags,omitempty"`
	CustomFields         map[string]interface{}                                        `json:"custom_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WritableVirtualCircuitTerminationRequest WritableVirtualCircuitTerminationRequest

// NewWritableVirtualCircuitTerminationRequest instantiates a new WritableVirtualCircuitTerminationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableVirtualCircuitTerminationRequest(virtualCircuit PatchedWritableVirtualCircuitTerminationRequestVirtualCircuit, interface_ PatchedWritableVirtualCircuitTerminationRequestInterface) *WritableVirtualCircuitTerminationRequest {
	this := WritableVirtualCircuitTerminationRequest{}
	this.VirtualCircuit = virtualCircuit
	this.Interface = interface_
	return &this
}

// NewWritableVirtualCircuitTerminationRequestWithDefaults instantiates a new WritableVirtualCircuitTerminationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableVirtualCircuitTerminationRequestWithDefaults() *WritableVirtualCircuitTerminationRequest {
	this := WritableVirtualCircuitTerminationRequest{}
	return &this
}

// GetVirtualCircuit returns the VirtualCircuit field value
func (o *WritableVirtualCircuitTerminationRequest) GetVirtualCircuit() PatchedWritableVirtualCircuitTerminationRequestVirtualCircuit {
	if o == nil {
		var ret PatchedWritableVirtualCircuitTerminationRequestVirtualCircuit
		return ret
	}

	return o.VirtualCircuit
}

// GetVirtualCircuitOk returns a tuple with the VirtualCircuit field value
// and a boolean to check if the value has been set.
func (o *WritableVirtualCircuitTerminationRequest) GetVirtualCircuitOk() (*PatchedWritableVirtualCircuitTerminationRequestVirtualCircuit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualCircuit, true
}

// SetVirtualCircuit sets field value
func (o *WritableVirtualCircuitTerminationRequest) SetVirtualCircuit(v PatchedWritableVirtualCircuitTerminationRequestVirtualCircuit) {
	o.VirtualCircuit = v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *WritableVirtualCircuitTerminationRequest) GetRole() PatchedWritableTunnelTerminationRequestRole {
	if o == nil || IsNil(o.Role) {
		var ret PatchedWritableTunnelTerminationRequestRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualCircuitTerminationRequest) GetRoleOk() (*PatchedWritableTunnelTerminationRequestRole, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *WritableVirtualCircuitTerminationRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given PatchedWritableTunnelTerminationRequestRole and assigns it to the Role field.
func (o *WritableVirtualCircuitTerminationRequest) SetRole(v PatchedWritableTunnelTerminationRequestRole) {
	o.Role = &v
}

// GetInterface returns the Interface field value
func (o *WritableVirtualCircuitTerminationRequest) GetInterface() PatchedWritableVirtualCircuitTerminationRequestInterface {
	if o == nil {
		var ret PatchedWritableVirtualCircuitTerminationRequestInterface
		return ret
	}

	return o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value
// and a boolean to check if the value has been set.
func (o *WritableVirtualCircuitTerminationRequest) GetInterfaceOk() (*PatchedWritableVirtualCircuitTerminationRequestInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interface, true
}

// SetInterface sets field value
func (o *WritableVirtualCircuitTerminationRequest) SetInterface(v PatchedWritableVirtualCircuitTerminationRequestInterface) {
	o.Interface = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WritableVirtualCircuitTerminationRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualCircuitTerminationRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WritableVirtualCircuitTerminationRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WritableVirtualCircuitTerminationRequest) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WritableVirtualCircuitTerminationRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualCircuitTerminationRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WritableVirtualCircuitTerminationRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *WritableVirtualCircuitTerminationRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *WritableVirtualCircuitTerminationRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualCircuitTerminationRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *WritableVirtualCircuitTerminationRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *WritableVirtualCircuitTerminationRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o WritableVirtualCircuitTerminationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WritableVirtualCircuitTerminationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["virtual_circuit"] = o.VirtualCircuit
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	toSerialize["interface"] = o.Interface
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WritableVirtualCircuitTerminationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"virtual_circuit",
		"interface",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varWritableVirtualCircuitTerminationRequest := _WritableVirtualCircuitTerminationRequest{}

	err = json.Unmarshal(data, &varWritableVirtualCircuitTerminationRequest)

	if err != nil {
		return err
	}

	*o = WritableVirtualCircuitTerminationRequest(varWritableVirtualCircuitTerminationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "virtual_circuit")
		delete(additionalProperties, "role")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "description")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWritableVirtualCircuitTerminationRequest struct {
	value *WritableVirtualCircuitTerminationRequest
	isSet bool
}

func (v NullableWritableVirtualCircuitTerminationRequest) Get() *WritableVirtualCircuitTerminationRequest {
	return v.value
}

func (v *NullableWritableVirtualCircuitTerminationRequest) Set(val *WritableVirtualCircuitTerminationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableVirtualCircuitTerminationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableVirtualCircuitTerminationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableVirtualCircuitTerminationRequest(val *WritableVirtualCircuitTerminationRequest) *NullableWritableVirtualCircuitTerminationRequest {
	return &NullableWritableVirtualCircuitTerminationRequest{value: val, isSet: true}
}

func (v NullableWritableVirtualCircuitTerminationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableVirtualCircuitTerminationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
