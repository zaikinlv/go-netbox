/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// checks if the PatchedVLANTranslationRuleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedVLANTranslationRuleRequest{}

// PatchedVLANTranslationRuleRequest Adds support for custom fields and tags.
type PatchedVLANTranslationRuleRequest struct {
	Policy *int32 `json:"policy,omitempty"`
	// Numeric VLAN ID (1-4094)
	LocalVid *int32 `json:"local_vid,omitempty"`
	// Numeric VLAN ID (1-4094)
	RemoteVid            *int32  `json:"remote_vid,omitempty"`
	Description          *string `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedVLANTranslationRuleRequest PatchedVLANTranslationRuleRequest

// NewPatchedVLANTranslationRuleRequest instantiates a new PatchedVLANTranslationRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedVLANTranslationRuleRequest() *PatchedVLANTranslationRuleRequest {
	this := PatchedVLANTranslationRuleRequest{}
	return &this
}

// NewPatchedVLANTranslationRuleRequestWithDefaults instantiates a new PatchedVLANTranslationRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedVLANTranslationRuleRequestWithDefaults() *PatchedVLANTranslationRuleRequest {
	this := PatchedVLANTranslationRuleRequest{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *PatchedVLANTranslationRuleRequest) GetPolicy() int32 {
	if o == nil || IsNil(o.Policy) {
		var ret int32
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedVLANTranslationRuleRequest) GetPolicyOk() (*int32, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *PatchedVLANTranslationRuleRequest) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given int32 and assigns it to the Policy field.
func (o *PatchedVLANTranslationRuleRequest) SetPolicy(v int32) {
	o.Policy = &v
}

// GetLocalVid returns the LocalVid field value if set, zero value otherwise.
func (o *PatchedVLANTranslationRuleRequest) GetLocalVid() int32 {
	if o == nil || IsNil(o.LocalVid) {
		var ret int32
		return ret
	}
	return *o.LocalVid
}

// GetLocalVidOk returns a tuple with the LocalVid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedVLANTranslationRuleRequest) GetLocalVidOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalVid) {
		return nil, false
	}
	return o.LocalVid, true
}

// HasLocalVid returns a boolean if a field has been set.
func (o *PatchedVLANTranslationRuleRequest) HasLocalVid() bool {
	if o != nil && !IsNil(o.LocalVid) {
		return true
	}

	return false
}

// SetLocalVid gets a reference to the given int32 and assigns it to the LocalVid field.
func (o *PatchedVLANTranslationRuleRequest) SetLocalVid(v int32) {
	o.LocalVid = &v
}

// GetRemoteVid returns the RemoteVid field value if set, zero value otherwise.
func (o *PatchedVLANTranslationRuleRequest) GetRemoteVid() int32 {
	if o == nil || IsNil(o.RemoteVid) {
		var ret int32
		return ret
	}
	return *o.RemoteVid
}

// GetRemoteVidOk returns a tuple with the RemoteVid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedVLANTranslationRuleRequest) GetRemoteVidOk() (*int32, bool) {
	if o == nil || IsNil(o.RemoteVid) {
		return nil, false
	}
	return o.RemoteVid, true
}

// HasRemoteVid returns a boolean if a field has been set.
func (o *PatchedVLANTranslationRuleRequest) HasRemoteVid() bool {
	if o != nil && !IsNil(o.RemoteVid) {
		return true
	}

	return false
}

// SetRemoteVid gets a reference to the given int32 and assigns it to the RemoteVid field.
func (o *PatchedVLANTranslationRuleRequest) SetRemoteVid(v int32) {
	o.RemoteVid = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchedVLANTranslationRuleRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedVLANTranslationRuleRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedVLANTranslationRuleRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchedVLANTranslationRuleRequest) SetDescription(v string) {
	o.Description = &v
}

func (o PatchedVLANTranslationRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedVLANTranslationRuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.LocalVid) {
		toSerialize["local_vid"] = o.LocalVid
	}
	if !IsNil(o.RemoteVid) {
		toSerialize["remote_vid"] = o.RemoteVid
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedVLANTranslationRuleRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedVLANTranslationRuleRequest := _PatchedVLANTranslationRuleRequest{}

	err = json.Unmarshal(data, &varPatchedVLANTranslationRuleRequest)

	if err != nil {
		return err
	}

	*o = PatchedVLANTranslationRuleRequest(varPatchedVLANTranslationRuleRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "policy")
		delete(additionalProperties, "local_vid")
		delete(additionalProperties, "remote_vid")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedVLANTranslationRuleRequest struct {
	value *PatchedVLANTranslationRuleRequest
	isSet bool
}

func (v NullablePatchedVLANTranslationRuleRequest) Get() *PatchedVLANTranslationRuleRequest {
	return v.value
}

func (v *NullablePatchedVLANTranslationRuleRequest) Set(val *PatchedVLANTranslationRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedVLANTranslationRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedVLANTranslationRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedVLANTranslationRuleRequest(val *PatchedVLANTranslationRuleRequest) *NullablePatchedVLANTranslationRuleRequest {
	return &NullablePatchedVLANTranslationRuleRequest{value: val, isSet: true}
}

func (v NullablePatchedVLANTranslationRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedVLANTranslationRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
