/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// CircuitsCircuitsListDistanceUnitParameter the model 'CircuitsCircuitsListDistanceUnitParameter'
type CircuitsCircuitsListDistanceUnitParameter string

// List of circuits_circuits_list_distance_unit_parameter
const (
	CIRCUITSCIRCUITSLISTDISTANCEUNITPARAMETER_FT CircuitsCircuitsListDistanceUnitParameter = "ft"
	CIRCUITSCIRCUITSLISTDISTANCEUNITPARAMETER_KM CircuitsCircuitsListDistanceUnitParameter = "km"
	CIRCUITSCIRCUITSLISTDISTANCEUNITPARAMETER_M  CircuitsCircuitsListDistanceUnitParameter = "m"
	CIRCUITSCIRCUITSLISTDISTANCEUNITPARAMETER_MI CircuitsCircuitsListDistanceUnitParameter = "mi"
)

// All allowed values of CircuitsCircuitsListDistanceUnitParameter enum
var AllowedCircuitsCircuitsListDistanceUnitParameterEnumValues = []CircuitsCircuitsListDistanceUnitParameter{
	"ft",
	"km",
	"m",
	"mi",
}

func (v *CircuitsCircuitsListDistanceUnitParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CircuitsCircuitsListDistanceUnitParameter(value)
	for _, existing := range AllowedCircuitsCircuitsListDistanceUnitParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CircuitsCircuitsListDistanceUnitParameter", value)
}

// NewCircuitsCircuitsListDistanceUnitParameterFromValue returns a pointer to a valid CircuitsCircuitsListDistanceUnitParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCircuitsCircuitsListDistanceUnitParameterFromValue(v string) (*CircuitsCircuitsListDistanceUnitParameter, error) {
	ev := CircuitsCircuitsListDistanceUnitParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CircuitsCircuitsListDistanceUnitParameter: valid values are %v", v, AllowedCircuitsCircuitsListDistanceUnitParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CircuitsCircuitsListDistanceUnitParameter) IsValid() bool {
	for _, existing := range AllowedCircuitsCircuitsListDistanceUnitParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to circuits_circuits_list_distance_unit_parameter value
func (v CircuitsCircuitsListDistanceUnitParameter) Ptr() *CircuitsCircuitsListDistanceUnitParameter {
	return &v
}

type NullableCircuitsCircuitsListDistanceUnitParameter struct {
	value *CircuitsCircuitsListDistanceUnitParameter
	isSet bool
}

func (v NullableCircuitsCircuitsListDistanceUnitParameter) Get() *CircuitsCircuitsListDistanceUnitParameter {
	return v.value
}

func (v *NullableCircuitsCircuitsListDistanceUnitParameter) Set(val *CircuitsCircuitsListDistanceUnitParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableCircuitsCircuitsListDistanceUnitParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableCircuitsCircuitsListDistanceUnitParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCircuitsCircuitsListDistanceUnitParameter(val *CircuitsCircuitsListDistanceUnitParameter) *NullableCircuitsCircuitsListDistanceUnitParameter {
	return &NullableCircuitsCircuitsListDistanceUnitParameter{value: val, isSet: true}
}

func (v NullableCircuitsCircuitsListDistanceUnitParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCircuitsCircuitsListDistanceUnitParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
