/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// CoreObjectChangesListActionParameter the model 'CoreObjectChangesListActionParameter'
type CoreObjectChangesListActionParameter string

// List of core_object_changes_list_action_parameter
const (
	COREOBJECTCHANGESLISTACTIONPARAMETER_CREATE CoreObjectChangesListActionParameter = "create"
	COREOBJECTCHANGESLISTACTIONPARAMETER_DELETE CoreObjectChangesListActionParameter = "delete"
	COREOBJECTCHANGESLISTACTIONPARAMETER_UPDATE CoreObjectChangesListActionParameter = "update"
)

// All allowed values of CoreObjectChangesListActionParameter enum
var AllowedCoreObjectChangesListActionParameterEnumValues = []CoreObjectChangesListActionParameter{
	"create",
	"delete",
	"update",
}

func (v *CoreObjectChangesListActionParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CoreObjectChangesListActionParameter(value)
	for _, existing := range AllowedCoreObjectChangesListActionParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CoreObjectChangesListActionParameter", value)
}

// NewCoreObjectChangesListActionParameterFromValue returns a pointer to a valid CoreObjectChangesListActionParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCoreObjectChangesListActionParameterFromValue(v string) (*CoreObjectChangesListActionParameter, error) {
	ev := CoreObjectChangesListActionParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CoreObjectChangesListActionParameter: valid values are %v", v, AllowedCoreObjectChangesListActionParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CoreObjectChangesListActionParameter) IsValid() bool {
	for _, existing := range AllowedCoreObjectChangesListActionParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to core_object_changes_list_action_parameter value
func (v CoreObjectChangesListActionParameter) Ptr() *CoreObjectChangesListActionParameter {
	return &v
}

type NullableCoreObjectChangesListActionParameter struct {
	value *CoreObjectChangesListActionParameter
	isSet bool
}

func (v NullableCoreObjectChangesListActionParameter) Get() *CoreObjectChangesListActionParameter {
	return v.value
}

func (v *NullableCoreObjectChangesListActionParameter) Set(val *CoreObjectChangesListActionParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreObjectChangesListActionParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreObjectChangesListActionParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreObjectChangesListActionParameter(val *CoreObjectChangesListActionParameter) *NullableCoreObjectChangesListActionParameter {
	return &NullableCoreObjectChangesListActionParameter{value: val, isSet: true}
}

func (v NullableCoreObjectChangesListActionParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreObjectChangesListActionParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
