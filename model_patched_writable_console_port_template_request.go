/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.2.6-Docker-3.2.0 (4.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// checks if the PatchedWritableConsolePortTemplateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedWritableConsolePortTemplateRequest{}

// PatchedWritableConsolePortTemplateRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedWritableConsolePortTemplateRequest struct {
	DeviceType NullableConsolePortTemplateRequestDeviceType `json:"device_type,omitempty"`
	ModuleType NullableConsolePortTemplateRequestModuleType `json:"module_type,omitempty"`
	// {module} is accepted as a substitution for the module bay position when attached to a module type.
	Name *string `json:"name,omitempty"`
	// Physical label
	Label                *string                                               `json:"label,omitempty"`
	Type                 NullablePatchedWritableConsolePortTemplateRequestType `json:"type,omitempty"`
	Description          *string                                               `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedWritableConsolePortTemplateRequest PatchedWritableConsolePortTemplateRequest

// NewPatchedWritableConsolePortTemplateRequest instantiates a new PatchedWritableConsolePortTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableConsolePortTemplateRequest() *PatchedWritableConsolePortTemplateRequest {
	this := PatchedWritableConsolePortTemplateRequest{}
	return &this
}

// NewPatchedWritableConsolePortTemplateRequestWithDefaults instantiates a new PatchedWritableConsolePortTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableConsolePortTemplateRequestWithDefaults() *PatchedWritableConsolePortTemplateRequest {
	this := PatchedWritableConsolePortTemplateRequest{}
	return &this
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableConsolePortTemplateRequest) GetDeviceType() ConsolePortTemplateRequestDeviceType {
	if o == nil || IsNil(o.DeviceType.Get()) {
		var ret ConsolePortTemplateRequestDeviceType
		return ret
	}
	return *o.DeviceType.Get()
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableConsolePortTemplateRequest) GetDeviceTypeOk() (*ConsolePortTemplateRequestDeviceType, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceType.Get(), o.DeviceType.IsSet()
}

// HasDeviceType returns a boolean if a field has been set.
func (o *PatchedWritableConsolePortTemplateRequest) HasDeviceType() bool {
	if o != nil && o.DeviceType.IsSet() {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given NullableConsolePortTemplateRequestDeviceType and assigns it to the DeviceType field.
func (o *PatchedWritableConsolePortTemplateRequest) SetDeviceType(v ConsolePortTemplateRequestDeviceType) {
	o.DeviceType.Set(&v)
}

// SetDeviceTypeNil sets the value for DeviceType to be an explicit nil
func (o *PatchedWritableConsolePortTemplateRequest) SetDeviceTypeNil() {
	o.DeviceType.Set(nil)
}

// UnsetDeviceType ensures that no value is present for DeviceType, not even an explicit nil
func (o *PatchedWritableConsolePortTemplateRequest) UnsetDeviceType() {
	o.DeviceType.Unset()
}

// GetModuleType returns the ModuleType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableConsolePortTemplateRequest) GetModuleType() ConsolePortTemplateRequestModuleType {
	if o == nil || IsNil(o.ModuleType.Get()) {
		var ret ConsolePortTemplateRequestModuleType
		return ret
	}
	return *o.ModuleType.Get()
}

// GetModuleTypeOk returns a tuple with the ModuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableConsolePortTemplateRequest) GetModuleTypeOk() (*ConsolePortTemplateRequestModuleType, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModuleType.Get(), o.ModuleType.IsSet()
}

// HasModuleType returns a boolean if a field has been set.
func (o *PatchedWritableConsolePortTemplateRequest) HasModuleType() bool {
	if o != nil && o.ModuleType.IsSet() {
		return true
	}

	return false
}

// SetModuleType gets a reference to the given NullableConsolePortTemplateRequestModuleType and assigns it to the ModuleType field.
func (o *PatchedWritableConsolePortTemplateRequest) SetModuleType(v ConsolePortTemplateRequestModuleType) {
	o.ModuleType.Set(&v)
}

// SetModuleTypeNil sets the value for ModuleType to be an explicit nil
func (o *PatchedWritableConsolePortTemplateRequest) SetModuleTypeNil() {
	o.ModuleType.Set(nil)
}

// UnsetModuleType ensures that no value is present for ModuleType, not even an explicit nil
func (o *PatchedWritableConsolePortTemplateRequest) UnsetModuleType() {
	o.ModuleType.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedWritableConsolePortTemplateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableConsolePortTemplateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedWritableConsolePortTemplateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedWritableConsolePortTemplateRequest) SetName(v string) {
	o.Name = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PatchedWritableConsolePortTemplateRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableConsolePortTemplateRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PatchedWritableConsolePortTemplateRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PatchedWritableConsolePortTemplateRequest) SetLabel(v string) {
	o.Label = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableConsolePortTemplateRequest) GetType() PatchedWritableConsolePortTemplateRequestType {
	if o == nil || IsNil(o.Type.Get()) {
		var ret PatchedWritableConsolePortTemplateRequestType
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableConsolePortTemplateRequest) GetTypeOk() (*PatchedWritableConsolePortTemplateRequestType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *PatchedWritableConsolePortTemplateRequest) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullablePatchedWritableConsolePortTemplateRequestType and assigns it to the Type field.
func (o *PatchedWritableConsolePortTemplateRequest) SetType(v PatchedWritableConsolePortTemplateRequestType) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *PatchedWritableConsolePortTemplateRequest) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *PatchedWritableConsolePortTemplateRequest) UnsetType() {
	o.Type.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchedWritableConsolePortTemplateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableConsolePortTemplateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedWritableConsolePortTemplateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchedWritableConsolePortTemplateRequest) SetDescription(v string) {
	o.Description = &v
}

func (o PatchedWritableConsolePortTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedWritableConsolePortTemplateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceType.IsSet() {
		toSerialize["device_type"] = o.DeviceType.Get()
	}
	if o.ModuleType.IsSet() {
		toSerialize["module_type"] = o.ModuleType.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedWritableConsolePortTemplateRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedWritableConsolePortTemplateRequest := _PatchedWritableConsolePortTemplateRequest{}

	err = json.Unmarshal(data, &varPatchedWritableConsolePortTemplateRequest)

	if err != nil {
		return err
	}

	*o = PatchedWritableConsolePortTemplateRequest(varPatchedWritableConsolePortTemplateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "device_type")
		delete(additionalProperties, "module_type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "label")
		delete(additionalProperties, "type")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedWritableConsolePortTemplateRequest struct {
	value *PatchedWritableConsolePortTemplateRequest
	isSet bool
}

func (v NullablePatchedWritableConsolePortTemplateRequest) Get() *PatchedWritableConsolePortTemplateRequest {
	return v.value
}

func (v *NullablePatchedWritableConsolePortTemplateRequest) Set(val *PatchedWritableConsolePortTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableConsolePortTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableConsolePortTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableConsolePortTemplateRequest(val *PatchedWritableConsolePortTemplateRequest) *NullablePatchedWritableConsolePortTemplateRequest {
	return &NullablePatchedWritableConsolePortTemplateRequest{value: val, isSet: true}
}

func (v NullablePatchedWritableConsolePortTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableConsolePortTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
